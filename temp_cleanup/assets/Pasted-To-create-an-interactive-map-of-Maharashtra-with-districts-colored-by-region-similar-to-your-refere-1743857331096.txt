To create an interactive map of Maharashtra with districts colored by region, similar to your reference, follow these steps:

1. Obtain Maharashtra Districts GeoJSON Data
You'll need a GeoJSON file containing the boundaries of Maharashtra's districts, each with a region property. A suitable dataset is available from DataMeet's GitHub repository:​
projects.datameet.org

Maharashtra Districts GeoJSON: maharashtra.topo.json​
GitHub
+1
projects.datameet.org
+1

Since this is a TopoJSON file, you'll need to convert it to GeoJSON using tools like MapShaper.​
GitHub

2. Set Up Your Project Structure
Organize your project directory as follows:

arduino
Copy
Edit
/maharashtra-map/
├── index.html
├── style.css
├── maharashtra_districts.geojson
3. Create the HTML Structure (index.html)
html
Copy
Edit
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Maharashtra Regional Map</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="map"></div>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <!-- D3.js for TopoJSON conversion -->
  <script src="https://d3js.org/d3.v5.min.js"></script>
  <script src="https://d3js.org/topojson.v1.min.js"></script>
  <!-- Main Script -->
  <script src="script.js"></script>
</body>
</html>
4. Define the CSS Styles (style.css)
css
Copy
Edit
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
}

#map {
  width: 100%;
  height: 100vh;
}

.leaflet-popup-content {
  font-family: 'Arial', sans-serif;
  font-size: 14px;
}
5. Implement the JavaScript Logic (script.js)
javascript
Copy
Edit
// Define region colors
const regionColors = {
  "Amaravati": "#f4b4b4",
  "Nagpur": "#f4d29c",
  "Chhatrapati Sambhaji Nagar": "#aba6f3",
  "Nashik": "#f1e26d",
  "Pune": "#93db93",
  "Konkan": "#888"
};

// Initialize the map
const map = L.map('map').setView([19.7515, 75.7139], 6.5); // Centered on Maharashtra

// Add OpenStreetMap tiles
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: '&copy; OpenStreetMap contributors'
}).addTo(map);

// Load and display the GeoJSON data
fetch('maharashtra_districts.geojson')
  .then(response => response.json())
  .then(geojsonData => {
    L.geoJSON(geojsonData, {
      style: feature => ({
        color: "#fff",
        weight: 1,
        fillColor: regionColors[feature.properties.region] || "#ccc",
        fillOpacity: 0.8
      }),
      onEachFeature: (feature, layer) => {
        layer.bindPopup(`<strong>${feature.properties.district}</strong><br>Region: ${feature.properties.region}`);
      }
    }).addTo(map);
  })
  .catch(error => console.error('Error loading the GeoJSON data:', error));
6. Add Region Labels (Optional)
To add labels for each region, you can place markers at the approximate center of each region:

javascript
Copy
Edit
const regionCenters = {
  "Amaravati": [20.9374, 77.7796],
  "Nagpur": [21.1458, 79.0882],
  "Chhatrapati Sambhaji Nagar": [19.8762, 75.3433],
  "Nashik": [20.0110, 73.7903],
  "Pune": [18.5204, 73.8567],
  "Konkan": [18.5204, 73.8567] // Adjust coordinates as needed
};

for (const [region, coords] of Object.entries(regionCenters)) {
  L.marker(coords, {
    icon: L.divIcon({
      className: 'region-label',
      html: `<div>${region}</div>`,
      iconSize: [100, 40]
    })
  }).addTo(map);
}
Add the following CSS to style the region labels:

css
Copy
Edit
.region-label {
  font-size: 16px;
  font-weight: bold;
  color: #333;
  text-align: center;
  background: rgba(255, 255, 255, 0.7);
  padding: 5px;
  border-radius: 5px;
}
Notes:
GeoJSON Data: Ensure your maharashtra_districts.geojson file includes a region property for each district to facilitate region-based coloring.

Customization: Adjust the regionColors object and regionCenters coordinates to match your desired color scheme and label positions.

Interactivity: The map includes popups displaying the district and region names when a district is clicked.

For further customization and advanced features, refer to the Leaflet Quick Start Guide and Leaflet Tutorials.​
leafletjs.com
+1
leafletjs.com
+1

By following these steps, you'll create an interactive map of Maharashtra with districts colored by region, complete with labels and popups, closely resembling your reference image.